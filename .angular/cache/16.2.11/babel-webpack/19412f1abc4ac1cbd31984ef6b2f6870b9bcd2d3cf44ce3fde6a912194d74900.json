{"ast":null,"code":"import { inject } from '@angular/core';\nimport { TaskService } from 'src/app/Services/task.service';\nimport * as i0 from \"@angular/core\";\nexport class StatsComponent {\n  constructor() {\n    this.inprogress = 0;\n    this.open = 0;\n    this.started = 0;\n    this.closed = 0;\n    this.total = 0;\n    this.tasks = [];\n    this.taskService = inject(TaskService);\n  }\n  ngOnInit() {\n    this.taskService.GetAlltasks().subscribe(taskList => {\n      this.tasks = taskList;\n      this.total = taskList.length;\n      this.open = taskList.filter(x => x.status === 'open').length;\n      this.started = taskList.filter(x => x.status === 'started').length;\n      this.inprogress = taskList.filter(x => x.status === 'in-progress').length;\n      this.closed = taskList.filter(x => x.status === 'closed').length;\n    });\n  }\n  static #_ = this.ɵfac = function StatsComponent_Factory(t) {\n    return new (t || StatsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatsComponent,\n    selectors: [[\"app-stats\"]],\n    decls: 39,\n    vars: 8,\n    consts: [[1, \"status-content\"]],\n    template: function StatsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Task Status & Percentage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"td\");\n        i0.ɵɵtext(6, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"td\");\n        i0.ɵɵtext(8, \"Count\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"td\");\n        i0.ɵɵtext(10, \"Percentage\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"tr\")(12, \"td\");\n        i0.ɵɵtext(13, \"Open\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"td\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"td\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"tr\")(19, \"td\");\n        i0.ɵɵtext(20, \"Started\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"td\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"td\");\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"tr\")(26, \"td\");\n        i0.ɵɵtext(27, \"In Progress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"td\");\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"td\");\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"tr\")(33, \"td\");\n        i0.ɵɵtext(34, \"Closed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"td\");\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"td\");\n        i0.ɵɵtext(38);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵtextInterpolate(ctx.open);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", (ctx.open / ctx.total * 100).toFixed(2), \" %\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.started);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", (ctx.started / ctx.total * 100).toFixed(2), \" %\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.inprogress);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", (ctx.inprogress / ctx.total * 100).toFixed(2), \" %\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.closed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", (ctx.closed / ctx.total * 100).toFixed(2), \" %\");\n      }\n    },\n    styles: [\".status-content[_ngcontent-%COMP%]{\\n    padding: 30px 30px;\\n    margin: 50px 100px;\\n    border: #fff 1px solid;\\n}\\nthead[_ngcontent-%COMP%]{\\n    font-weight: bold;\\n}\\ntable[_ngcontent-%COMP%], td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    border: #cdcdcd 1px solid;\\n  }\\n  td[_ngcontent-%COMP%]{\\n    padding: 5px 10px;\\n  }\\n  \\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL3N0YXRzL3N0YXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSx5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RhdHVzLWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDMwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggMTAwcHg7XHJcbiAgICBib3JkZXI6ICNmZmYgMXB4IHNvbGlkO1xyXG59XHJcbnRoZWFke1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxudGFibGUsIHRkLCB0aCB7XHJcbiAgICBib3JkZXI6ICNjZGNkY2QgMXB4IHNvbGlkO1xyXG4gIH1cclxuICB0ZHtcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","TaskService","StatsComponent","constructor","inprogress","open","started","closed","total","tasks","taskService","ngOnInit","GetAlltasks","subscribe","taskList","length","filter","x","status","_","_2","selectors","decls","vars","consts","template","StatsComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","toFixed"],"sources":["D:\\AngularCRUDApp\\src\\app\\dashboard\\stats\\stats.component.ts","D:\\AngularCRUDApp\\src\\app\\dashboard\\stats\\stats.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { Task } from 'src/app/Model/Task';\nimport { TaskService } from 'src/app/Services/task.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent {\n  inprogress: number = 0;\n  open: number = 0;\n  started: number = 0;\n  closed: number = 0;\n  total: number = 0;\n  tasks: Task[] = [];\n\n  taskService: TaskService = inject(TaskService);\n\n  ngOnInit(){\n    this.taskService.GetAlltasks().subscribe((taskList: Task[]) => {\n      this.tasks = taskList;\n      this.total = taskList.length;\n      this.open = taskList.filter(x => x.status === 'open').length;\n      this.started = taskList.filter(x => x.status === 'started').length;\n      this.inprogress = taskList.filter(x => x.status === 'in-progress').length;\n      this.closed = taskList.filter(x => x.status === 'closed').length;\n    });\n  }\n}\n","<div class=\"status-content\">\n    <h2>Task Status & Percentage</h2>\n    <table>\n        <thead>\n            <td>Status</td>\n            <td>Count</td>\n            <td>Percentage</td>\n        </thead>\n        <tr>\n            <td>Open</td>\n            <td>{{ open }}</td>\n            <td>{{ (open /total * 100).toFixed(2)}} %</td>\n        </tr>\n        <tr>\n            <td>Started</td>\n            <td>{{ started }}</td>\n            <td>{{ (started /total * 100).toFixed(2)}} %</td>\n        </tr>\n        <tr>\n            <td>In Progress</td>\n            <td>{{ inprogress }}</td>\n            <td>{{ (inprogress /total * 100).toFixed(2)}} %</td>\n        </tr>\n        <tr>\n            <td>Closed</td>\n            <td>{{ closed }}</td>\n            <td>{{ (closed /total * 100).toFixed(2)}} %</td>\n        </tr>\n    </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}