{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskService } from '../../Services/task.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../utility/loader/loader.component\";\nimport * as i3 from \"../../utility/snackbar/snackbar.component\";\nimport * as i4 from \"../create-task/create-task.component\";\nimport * as i5 from \"../task-details/task-details.component\";\nfunction OverviewComponent_app_create_task_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-create-task\", 11);\n    i0.ɵɵlistener(\"CloseForm\", function OverviewComponent_app_create_task_0_Template_app_create_task_CloseForm_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.CloseCreateTaskForm());\n    })(\"EmitTaskData\", function OverviewComponent_app_create_task_0_Template_app_create_task_EmitTaskData_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.CreateOrUpdateTask($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"isEditMode\", ctx_r0.editMode)(\"selectedTask\", ctx_r0.selectedTask);\n  }\n}\nfunction OverviewComponent_app_task_details_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-task-details\", 12);\n    i0.ɵɵlistener(\"CloseDetailView\", function OverviewComponent_app_task_details_1_Template_app_task_details_CloseDetailView_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.CloseTaskDetails());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"currentTask\", ctx_r1.currentTask);\n  }\n}\nfunction OverviewComponent_app_snackbar_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-snackbar\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r2.errorMessage);\n  }\n}\nfunction OverviewComponent_app_loader_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nfunction OverviewComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2, \"No task has been created yet!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OverviewComponent_ng_container_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\")(5, \"b\");\n    i0.ɵɵtext(6, \"Assigned to: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\")(9, \"b\");\n    i0.ɵɵtext(10, \"Priority: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\")(13, \"b\");\n    i0.ɵɵtext(14, \"Status: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 18)(17, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function OverviewComponent_ng_container_17_div_1_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const task_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.showCurrentTaskDetails(task_r12.id));\n    });\n    i0.ɵɵelement(18, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function OverviewComponent_ng_container_17_div_1_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const task_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.OnEditTaskClicked(task_r12.id));\n    });\n    i0.ɵɵelement(20, \"i\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function OverviewComponent_ng_container_17_div_1_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const task_r12 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.DeleteTask(task_r12.id));\n    });\n    i0.ɵɵelement(22, \"i\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"task-\" + task_r12.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r12.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r12.assignedTo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r12.priority);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r12.status);\n  }\n}\nfunction OverviewComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OverviewComponent_ng_container_17_div_1_Template, 23, 5, \"div\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.allTasks);\n  }\n}\nexport let OverviewComponent = /*#__PURE__*/(() => {\n  class OverviewComponent {\n    constructor() {\n      this.showCreateTaskForm = false;\n      this.showTaskDetails = false;\n      this.http = inject(HttpClient);\n      this.allTasks = [];\n      this.taskService = inject(TaskService);\n      this.currentTaskId = '';\n      this.isLoading = false;\n      this.currentTask = null;\n      this.errorMessage = null;\n      this.editMode = false;\n    }\n    ngOnInit() {\n      this.fetchAllTasks();\n      this.errorSub = this.taskService.errorSubject.subscribe({\n        next: httpError => {\n          this.setErrorMessage(httpError);\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.errorSub.unsubscribe();\n    }\n    OpenCreateTaskForm() {\n      this.showCreateTaskForm = true;\n      this.editMode = false;\n      this.selectedTask = {\n        title: '',\n        desc: '',\n        assignedTo: '',\n        createdAt: '',\n        priority: '',\n        status: ''\n      };\n    }\n    showCurrentTaskDetails(id) {\n      this.showTaskDetails = true;\n      this.taskService.getTaskDetails(id).subscribe({\n        next: data => {\n          this.currentTask = data;\n        }\n      });\n    }\n    CloseTaskDetails() {\n      this.showTaskDetails = false;\n    }\n    CloseCreateTaskForm() {\n      this.showCreateTaskForm = false;\n    }\n    CreateOrUpdateTask(data) {\n      if (!this.editMode) this.taskService.CreateTask(data);else this.taskService.UpdateTask(this.currentTaskId, data);\n    }\n    /*{\n      key1: {},\n      key2: {}\n    }*/\n    FetchAllTaskClicked() {\n      this.fetchAllTasks();\n    }\n    fetchAllTasks() {\n      this.isLoading = true;\n      this.taskService.GetAlltasks().subscribe({\n        next: tasks => {\n          this.allTasks = tasks;\n          this.isLoading = false;\n        },\n        error: error => {\n          this.setErrorMessage(error);\n          this.isLoading = false;\n        }\n      });\n    }\n    setErrorMessage(err) {\n      if (err.error.error === 'Permission denied') {\n        this.errorMessage = 'You do not have permisssion to perform this action';\n      } else {\n        this.errorMessage = err.message;\n      }\n      setTimeout(() => {\n        this.errorMessage = null;\n      }, 3000);\n    }\n    DeleteTask(id) {\n      this.taskService.DeleteTask(id);\n    }\n    DeleteAllTask() {\n      this.taskService.DeleteAllTasks();\n    }\n    OnEditTaskClicked(id) {\n      this.currentTaskId = id;\n      //OPEN EDIT TASK FORM\n      this.showCreateTaskForm = true;\n      this.editMode = true;\n      this.selectedTask = this.allTasks.find(task => {\n        return task.id === id;\n      });\n    }\n    static #_ = this.ɵfac = function OverviewComponent_Factory(t) {\n      return new (t || OverviewComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OverviewComponent,\n      selectors: [[\"app-overview\"]],\n      decls: 18,\n      vars: 6,\n      consts: [[3, \"isEditMode\", \"selectedTask\", \"CloseForm\", \"EmitTaskData\", 4, \"ngIf\"], [3, \"currentTask\", \"CloseDetailView\", 4, \"ngIf\"], [1, \"dashboard-container\"], [2, \"display\", \"flex\"], [2, \"width\", \"50%\"], [2, \"width\", \"50%\", \"text-align\", \"right\"], [1, \"create-task-btn\", 3, \"click\"], [1, \"dashboard-item-container\"], [3, \"errorMessage\", 4, \"ngIf\"], [4, \"ngIf\"], [\"style\", \"text-align: center;\", 4, \"ngIf\"], [3, \"isEditMode\", \"selectedTask\", \"CloseForm\", \"EmitTaskData\"], [3, \"currentTask\", \"CloseDetailView\"], [3, \"errorMessage\"], [2, \"text-align\", \"center\"], [\"class\", \"task-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\", 3, \"ngClass\"], [1, \"task-title\"], [1, \"task-action-icons\"], [\"title\", \"Detail\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-info-circle\"], [\"title\", \"Edit\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil-square-o\"], [\"title\", \"Delete\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n      template: function OverviewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, OverviewComponent_app_create_task_0_Template, 1, 2, \"app-create-task\", 0);\n          i0.ɵɵtemplate(1, OverviewComponent_app_task_details_1_Template, 1, 1, \"app-task-details\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n          i0.ɵɵtext(6, \"Dashboard\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function OverviewComponent_Template_button_click_8_listener() {\n            return ctx.OpenCreateTaskForm();\n          });\n          i0.ɵɵtext(9, \"Create Task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function OverviewComponent_Template_button_click_10_listener() {\n            return ctx.FetchAllTaskClicked();\n          });\n          i0.ɵɵtext(11, \"Fetch Tasks\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(12, \"hr\");\n          i0.ɵɵelementStart(13, \"div\", 7);\n          i0.ɵɵtemplate(14, OverviewComponent_app_snackbar_14_Template, 1, 1, \"app-snackbar\", 8);\n          i0.ɵɵtemplate(15, OverviewComponent_app_loader_15_Template, 1, 0, \"app-loader\", 9);\n          i0.ɵɵtemplate(16, OverviewComponent_div_16_Template, 3, 0, \"div\", 10);\n          i0.ɵɵtemplate(17, OverviewComponent_ng_container_17_Template, 2, 1, \"ng-container\", 9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.showCreateTaskForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showTaskDetails);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.allTasks.length < 1);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.LoaderComponent, i3.SnackbarComponent, i4.CreateTaskComponent, i5.TaskDetailsComponent],\n      styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:30px 100px}hr[_ngcontent-%COMP%]{border:#dedede 1.5px solid;margin:20px 0}.dashboard-item-container[_ngcontent-%COMP%]{margin-top:30px;padding:30px 50px;border:#dedede 1.5px solid;display:flex;flex-wrap:wrap}.task-action-icons[_ngcontent-%COMP%]{text-align:right}.task-action-btn[_ngcontent-%COMP%]{margin:0 5px;border:none;background-color:transparent}i[_ngcontent-%COMP%]{font-size:16px}.task-item[_ngcontent-%COMP%]{width:23%;margin:10px;padding:15px 30px;background-color:#fff;box-shadow:#00000059 0 5px 15px;border-radius:3px;font-size:14px}.task-complete[_ngcontent-%COMP%]{border-top:green 10px solid}.task-in-progress[_ngcontent-%COMP%]{border-top:orange 10px solid}.task-started[_ngcontent-%COMP%]{border-top:#3498DB 10px solid}.task-open[_ngcontent-%COMP%]{border-top:red 10px solid}.task-title[_ngcontent-%COMP%]{border-bottom:#28282B 2px solid}.create-task-btn[_ngcontent-%COMP%]{padding:10px 20px;background-color:#28282b;border:#cdcdcd 1px solid;color:#fff;margin:0 2px;border-radius:20px}.loader[_ngcontent-%COMP%]{border:16px solid #f3f3f3;border-top:16px solid #3498db;border-radius:50%;width:120px;height:120px;animation:_ngcontent-%COMP%_spin 2s linear infinite;margin:0 auto}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.sb[_ngcontent-%COMP%]{min-width:350px;margin-left:-125px;text-align:center;padding:16px;border-radius:5px;position:fixed;z-index:1;left:50%;top:40px;animation:_ngcontent-%COMP%_fadein .5s,fadeout .5s 2.5s}.sb-error[_ngcontent-%COMP%]{background-color:#e74c3c;color:#fff}.sb-success[_ngcontent-%COMP%]{background-color:#1abc9c;color:#28282b}@keyframes _ngcontent-%COMP%_fadein{0%{top:0;opacity:0}to{top:40px;opacity:1}}@keyframes _ngcontent-%COMP%_fadeout{0%{top:30px;opacity:1}to{top:0;opacity:0}}\"]\n    });\n  }\n  return OverviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}