{"ast":null,"code":"import { AuthInterceptorService } from './Services/auth-interceptor.service';\nimport { LoggingInterceptorService } from './Services/logging-interceptor.servive';\nimport { AuthService } from './Services/auth.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class CoreModule {\n  static #_ = this.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AuthService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoggingInterceptorService,\n      multi: true\n    }]\n  });\n}","map":{"version":3,"names":["AuthInterceptorService","LoggingInterceptorService","AuthService","HTTP_INTERCEPTORS","CoreModule","_","_2","_3","provide","useClass","multi"],"sources":["D:\\AngularCRUDApp\\src\\app\\core.module.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { AuthInterceptorService } from './Services/auth-interceptor.service';\r\nimport { LoggingInterceptorService } from './Services/logging-interceptor.servive';\r\nimport { AuthService } from './Services/auth.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    providers: [\r\n        AuthService,\r\n        {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true},\r\n        {provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptorService, multi: true}\r\n    ]\r\n})\r\nexport class CoreModule{\r\n\r\n}"],"mappings":"AACA,SAASA,sBAAsB,QAAQ,qCAAqC;AAC5E,SAASC,yBAAyB,QAAQ,wCAAwC;AAClF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,iBAAiB,QAAQ,sBAAsB;;AASxD,OAAM,MAAOC,UAAU;EAAA,QAAAC,CAAA,G;qBAAVD,UAAU;EAAA;EAAA,QAAAE,EAAA,G;UAAVF;EAAU;EAAA,QAAAG,EAAA,G;eANR,CACPL,WAAW,EACX;MAACM,OAAO,EAAEL,iBAAiB;MAAEM,QAAQ,EAAET,sBAAsB;MAAEU,KAAK,EAAE;IAAI,CAAC,EAC3E;MAACF,OAAO,EAAEL,iBAAiB;MAAEM,QAAQ,EAAER,yBAAyB;MAAES,KAAK,EAAE;IAAI,CAAC;EACjF"},"metadata":{},"sourceType":"module","externalDependencies":[]}