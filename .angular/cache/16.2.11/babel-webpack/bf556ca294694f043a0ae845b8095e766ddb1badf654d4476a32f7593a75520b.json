{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { exhaustMap, take } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nexport class AuthInterceptorService {\n  constructor() {\n    this.authService = inject(AuthService);\n  }\n  intercept(req, next) {\n    return this.authService.user.pipe(take(1), exhaustMap(user => {\n      if (!user) {\n        return next.handle(req);\n      }\n      const modifiedReq = req.clone({\n        params: new HttpParams().set('auth', user.token)\n      });\n      return next.handle(modifiedReq);\n    }));\n  }\n}","map":{"version":3,"names":["inject","HttpParams","exhaustMap","take","AuthService","AuthInterceptorService","constructor","authService","intercept","req","next","user","pipe","handle","modifiedReq","clone","params","set","token"],"sources":["D:\\angular-16-complete-course-main\\16-angular-module\\final\\src\\app\\Services\\auth-interceptor.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEventType, HttpParams } from '@angular/common/http';\r\nimport { exhaustMap, take, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor{\r\n    authService: AuthService = inject(AuthService);\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler){\r\n        return this.authService.user.pipe(take(1), exhaustMap(user => {\r\n            if(!user){\r\n                return next.handle(req);\r\n            }\r\n            const modifiedReq = req.clone({\r\n                params: new HttpParams().set('auth', user.token\r\n            )})\r\n            return next.handle(modifiedReq)\r\n        }));\r\n    }\r\n}"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAAmEC,UAAU,QAAQ,sBAAsB;AAC3G,SAASC,UAAU,EAAEC,IAAI,QAAa,gBAAgB;AACtD,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAM,MAAOC,sBAAsB;EAAnCC,YAAA;IACI,KAAAC,WAAW,GAAgBP,MAAM,CAACI,WAAW,CAAC;EAalD;EAXII,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,OAAO,IAAI,CAACH,WAAW,CAACI,IAAI,CAACC,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,EAAED,UAAU,CAACS,IAAI,IAAG;MACzD,IAAG,CAACA,IAAI,EAAC;QACL,OAAOD,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;MAE3B,MAAMK,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;QAC1BC,MAAM,EAAE,IAAIf,UAAU,EAAE,CAACgB,GAAG,CAAC,MAAM,EAAEN,IAAI,CAACO,KAAK;OACjD,CAAC;MACH,OAAOR,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC;IACnC,CAAC,CAAC,CAAC;EACP"},"metadata":{},"sourceType":"module","externalDependencies":[]}