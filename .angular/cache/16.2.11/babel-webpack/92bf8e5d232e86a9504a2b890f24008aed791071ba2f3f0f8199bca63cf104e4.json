{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpEventType } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { Subject, throwError } from 'rxjs';\nimport { LoggingService } from \"./Logging.Service\";\nimport { AuthService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.loggingService = inject(LoggingService);\n    this.errorSubject = new Subject();\n    this.authService = inject(AuthService);\n  }\n  CreateTask(task) {\n    const headers = new HttpHeaders({\n      'my-header': 'hello-world'\n    });\n    this.http.post('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks.json', task, {\n      headers: headers\n    }).pipe(catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  DeleteTask(id) {\n    this.http.delete('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks/' + id + '.json').pipe(catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  DeleteAllTasks() {\n    let errorMessage = \"This functionality is Hold\";\n    const errorObj = {\n      statusCode: 1001,\n      errorMessage: errorMessage,\n      datetime: new Date()\n    };\n    this.loggingService.logError(errorObj);\n    return throwError(() => errorMessage);\n  }\n  DeleteAllTasks1() {\n    this.http.delete('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks.json', {\n      observe: 'events',\n      responseType: 'json'\n    }).pipe(tap(event => {\n      console.log(event);\n      if (event.type === HttpEventType.Sent) {}\n    }), catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  GetAlltasks() {\n    return this.http.get('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks.json').pipe(map(response => {\n      //TRANSFORM DATA\n      let tasks = [];\n      console.log(response);\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    }), catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    }));\n  }\n  UpdateTask(id, data) {\n    this.http.put('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks/' + id + '.json', data).pipe(catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  getTaskDetails(id) {\n    return this.http.get('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks/' + id + '.json').pipe(map(response => {\n      console.log(response);\n      let task = {};\n      task = {\n        ...response,\n        id: id\n      };\n      return task;\n    }));\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","HttpHeaders","HttpEventType","map","catchError","tap","Subject","throwError","LoggingService","AuthService","TaskService","constructor","http","loggingService","errorSubject","authService","CreateTask","task","headers","post","pipe","err","errorObj","statusCode","status","errorMessage","message","datetime","Date","logError","subscribe","error","next","DeleteTask","id","delete","DeleteAllTasks","DeleteAllTasks1","observe","responseType","event","console","log","type","Sent","GetAlltasks","get","response","tasks","key","hasOwnProperty","push","UpdateTask","data","put","getTaskDetails","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\angular-16-complete-course-main\\16-angular-module\\final\\src\\app\\Services\\task.service.ts"],"sourcesContent":["import { Injectable, inject } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams, HttpEventType } from '@angular/common/http';\r\nimport { Task } from \"../Model/Task\";\r\nimport { map, catchError, tap, take, exhaustMap } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { LoggingService } from \"./Logging.Service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n    http: HttpClient = inject(HttpClient);\r\n    loggingService: LoggingService = inject(LoggingService);\r\n    errorSubject = new Subject<HttpErrorResponse>();\r\n    authService: AuthService = inject(AuthService);\r\n\r\n    CreateTask(task: Task) {\r\n        const headers = new HttpHeaders({ 'my-header': 'hello-world' })\r\n        this.http.post<{ name: string }>(\r\n            'https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks.json',\r\n            task, { headers: headers }\r\n        )\r\n            .pipe(catchError((err) => {\r\n                //Write the logic to log errors\r\n                const errorObj = { statusCode: err.status, errorMessage: err.message, datetime: new Date() }\r\n                this.loggingService.logError(errorObj);\r\n                return throwError(() => err);\r\n            }))\r\n            .subscribe({\r\n                error: (err) => {\r\n                    this.errorSubject.next(err);\r\n                }\r\n            });\r\n    }\r\n\r\n    DeleteTask(id: string | undefined) {\r\n        this.http.delete('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks/' + id + '.json')\r\n            .pipe(catchError((err) => {\r\n                //Write the logic to log errors\r\n                const errorObj = { statusCode: err.status, errorMessage: err.message, datetime: new Date() }\r\n                this.loggingService.logError(errorObj);\r\n                return throwError(() => err);\r\n            }))\r\n            .subscribe({\r\n                error: (err) => {\r\n                    this.errorSubject.next(err);\r\n                }\r\n            });\r\n    }\r\n\r\n    DeleteAllTasks() {\r\n                let errorMessage = \"This functionality is Hold\";\r\n                const errorObj = { statusCode: 1001, errorMessage: errorMessage, datetime: new Date() }\r\n                this.loggingService.logError(errorObj);\r\n                return throwError(() => errorMessage);\r\n    }\r\n    DeleteAllTasks1() {\r\n        this.http.delete('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks.json', { observe: 'events', responseType: 'json' })\r\n            .pipe(tap((event) => {\r\n                console.log(event);\r\n                if (event.type === HttpEventType.Sent) {\r\n\r\n                }\r\n            }), catchError((err) => {\r\n                //Write the logic to log errors\r\n                const errorObj = { statusCode: err.status, errorMessage: err.message, datetime: new Date() }\r\n                this.loggingService.logError(errorObj);\r\n                return throwError(() => err);\r\n            }))\r\n            .subscribe({\r\n                error: (err) => {\r\n                    this.errorSubject.next(err);\r\n                }\r\n            })\r\n    }\r\n\r\n    GetAlltasks() {\r\n        return this.http.get('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks.json').pipe(map((response) => {\r\n            //TRANSFORM DATA\r\n            let tasks = [];\r\n            console.log(response);\r\n            for (let key in response) {\r\n                if (response.hasOwnProperty(key)) {\r\n                    tasks.push({ ...response[key], id: key });\r\n                }\r\n            }\r\n\r\n            return tasks;\r\n        }), catchError((err) => {\r\n            //Write the logic to log errors\r\n            const errorObj = { statusCode: err.status, errorMessage: err.message, datetime: new Date() }\r\n            this.loggingService.logError(errorObj);\r\n            return throwError(() => err);\r\n        }));\r\n    }\r\n\r\n    UpdateTask(id: string | undefined, data: Task) {\r\n        this.http.put('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks/' + id + '.json', data)\r\n            .pipe(catchError((err) => {\r\n                //Write the logic to log errors\r\n                const errorObj = { statusCode: err.status, errorMessage: err.message, datetime: new Date() }\r\n                this.loggingService.logError(errorObj);\r\n                return throwError(() => err);\r\n            }))\r\n            .subscribe({\r\n                error: (err) => {\r\n                    this.errorSubject.next(err);\r\n                }\r\n            });\r\n    }\r\n\r\n    getTaskDetails(id: string | undefined) {\r\n        return this.http.get('https://angularhttpclient-87b69-default-rtdb.firebaseio.com/tasks/' + id + '.json')\r\n            .pipe(map((response) => {\r\n                console.log(response)\r\n                let task = {};\r\n                task = { ...response, id: id }\r\n                return task;\r\n            }))\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}