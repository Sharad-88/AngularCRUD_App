{"ast":null,"code":"import { EventEmitter, inject } from '@angular/core';\nimport { CounterService } from 'src/app/Services/counter.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"taskForm\"];\nexport let CreateTaskComponent = /*#__PURE__*/(() => {\n  class CreateTaskComponent {\n    constructor() {\n      this.countService = inject(CounterService);\n      this.isEditMode = false;\n      this.CloseForm = new EventEmitter();\n      this.EmitTaskData = new EventEmitter();\n    }\n    ngOnInit() {\n      this.countService.increment('CreateTaskComponent');\n    }\n    ngAfterViewInit() {\n      setTimeout(() => {\n        this.taskForm.form.patchValue(this.selectedTask);\n      }, 0);\n    }\n    OnCloseForm() {\n      this.CloseForm.emit(false);\n    }\n    OnFormSubmitted(form) {\n      this.EmitTaskData.emit(form.value);\n      this.CloseForm.emit(false);\n    }\n    static #_ = this.ɵfac = function CreateTaskComponent_Factory(t) {\n      return new (t || CreateTaskComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateTaskComponent,\n      selectors: [[\"app-create-task\"]],\n      viewQuery: function CreateTaskComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.taskForm = _t.first);\n        }\n      },\n      inputs: {\n        isEditMode: \"isEditMode\",\n        selectedTask: \"selectedTask\"\n      },\n      outputs: {\n        CloseForm: \"CloseForm\",\n        EmitTaskData: \"EmitTaskData\"\n      },\n      decls: 55,\n      vars: 2,\n      consts: [[1, \"overlay\"], [1, \"popup\"], [\"href\", \"#\", 1, \"close\", 3, \"click\"], [1, \"content\"], [1, \"container\"], [\"action\", \"#\", 1, \"form\", 3, \"ngSubmit\"], [\"taskForm\", \"ngForm\"], [1, \"input-box\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"title\", \"ngModel\", \"\"], [\"rows\", \"8\", \"name\", \"desc\", \"required\", \"\", \"ngModel\", \"\"], [1, \"column\"], [\"type\", \"text\", \"name\", \"assignedTo\", \"required\", \"\", \"ngModel\", \"\"], [\"type\", \"date\", \"name\", \"createdAt\", \"required\", \"\", \"ngModel\", \"\"], [1, \"input-box\", \"address\"], [1, \"select-box\"], [\"name\", \"priority\", \"ngModel\", \"\"], [\"hidden\", \"\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"value\", \"critical\"], [\"name\", \"status\", \"ngModel\", \"\"], [\"value\", \"open\"], [\"value\", \"started\"], [\"value\", \"in-progress\"], [\"value\", \"complete\"], [\"type\", \"submit\"]],\n      template: function CreateTaskComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"a\", 2);\n          i0.ɵɵlistener(\"click\", function CreateTaskComponent_Template_a_click_4_listener() {\n            return ctx.OnCloseForm();\n          });\n          i0.ɵɵtext(5, \"\\u00D7\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"section\", 4)(8, \"form\", 5, 6);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateTaskComponent_Template_form_ngSubmit_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const _r0 = i0.ɵɵreference(9);\n            return i0.ɵɵresetView(ctx.OnFormSubmitted(_r0));\n          });\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\");\n          i0.ɵɵtext(12, \"Title*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\");\n          i0.ɵɵtext(16, \"Description*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"textarea\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 10)(19, \"div\", 7)(20, \"label\");\n          i0.ɵɵtext(21, \"Assigned To\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\");\n          i0.ɵɵtext(25, \"Created At\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"input\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 13)(28, \"div\", 10)(29, \"div\", 14)(30, \"select\", 15)(31, \"option\", 16);\n          i0.ɵɵtext(32, \"Priority\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"option\", 17);\n          i0.ɵɵtext(34, \"Low\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"option\", 18);\n          i0.ɵɵtext(36, \"Medium\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"option\", 19);\n          i0.ɵɵtext(38, \"High\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"option\", 20);\n          i0.ɵɵtext(40, \"Critical\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(41, \"div\", 14)(42, \"select\", 21)(43, \"option\", 16);\n          i0.ɵɵtext(44, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"option\", 22);\n          i0.ɵɵtext(46, \"Open\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"option\", 23);\n          i0.ɵɵtext(48, \"Started\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"option\", 24);\n          i0.ɵɵtext(50, \"In Progress\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"option\", 25);\n          i0.ɵɵtext(52, \"Complete\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(53, \"button\", 26);\n          i0.ɵɵtext(54);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update Task\" : \"Create a new Task\");\n          i0.ɵɵadvance(51);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update Task\" : \"Create Task\");\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n      styles: [\".overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background:rgba(0,0,0,.7)}.popup[_ngcontent-%COMP%]{margin:30px auto;padding:20px;background:#fff;border-radius:5px;width:40%;position:relative}.popup[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:0;color:#333;font-family:Tahoma,Arial,sans-serif}.popup[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{position:absolute;top:20px;right:30px;transition:all .2s;font-size:30px;font-weight:700;text-decoration:none;color:#333}.popup[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]:hover{color:#06d85f}.popup[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{max-height:30%;overflow:auto}@media screen and (max-width: 700px){.popup[_ngcontent-%COMP%]{width:70%}}.container[_ngcontent-%COMP%]{position:relative;max-width:700px;width:100%;background:#fff;padding:25px;border-radius:8px;box-shadow:0 0 15px #0000001a}.container[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{font-size:1.5rem;color:#333;font-weight:500;text-align:center}.container[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]{margin-top:30px}.form[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%;margin-top:20px}.input-box[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#333}.form[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:where(.input-box   input[_ngcontent-%COMP%], .select-box)[_ngcontent-%COMP%]{position:relative;height:50px;width:100%;outline:none;font-size:1rem;color:#707070;margin-top:8px;border:2px solid #aaa;border-radius:6px;padding:0 15px}textarea[_ngcontent-%COMP%]{border:2px solid #aaa;border-radius:6px;padding:10px 15px}.form[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]{display:flex;column-gap:15px}.form[_ngcontent-%COMP%]   .gender-box[_ngcontent-%COMP%]{margin-top:20px}.gender-box[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#333;font-size:1rem;font-weight:400;margin-bottom:8px}.form[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:where(.gender-option, .gender)[_ngcontent-%COMP%]{display:flex;align-items:center;column-gap:50px;flex-wrap:wrap}.form[_ngcontent-%COMP%]   .gender[_ngcontent-%COMP%]{column-gap:5px}.gender[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{accent-color:rgb(130,106,251)}.form[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:where(.gender   input[_ngcontent-%COMP%], .gender[_ngcontent-%COMP%]   label)[_ngcontent-%COMP%]{cursor:pointer}.gender[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#707070}.address[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:where(input, .select-box)[_ngcontent-%COMP%]{margin-top:15px}.select-box[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{height:100%;width:100%;outline:none;border:none;color:#707070;font-size:1rem}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:55px;width:100%;color:#fff;font-size:1rem;font-weight:400;margin-top:30px;border:none;cursor:pointer;transition:all .2s ease;background:#3498DB}.form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:rgb(88,56,250)}@media screen and (max-width: 500px){.form[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]{flex-wrap:wrap}.form[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:where(.gender-option, .gender)[_ngcontent-%COMP%]{row-gap:15px}}\"]\n    });\n  }\n  return CreateTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}